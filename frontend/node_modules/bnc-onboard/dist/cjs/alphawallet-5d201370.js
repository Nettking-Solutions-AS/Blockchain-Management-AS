'use strict';

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var content = require('./content-7a1a4387.js');

var alphawalletIcon = "\n<svg width=\"192px\" height=\"192px\" viewBox=\"0 0 192 192\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <title>AlphaWallet</title>\n    <g id=\"AlphaWallet\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Edit-Here\">\n            <circle cx=\"96\" cy=\"96\" r=\"92\" fill=\"#FFFFFF\" />\n            <g id=\"Group\" transform=\"translate(21.000000, 42.750000)\">\n                <g id=\"Group\" transform=\"translate(-0.000000, 0.000000)\">\n                    <path d=\"M109.505067,49.0956928 C109.505067,54.7121495 104.950606,59.2640237 99.3367356,59.2640237 C93.7199556,59.2640237 89.1684047,54.7121495 89.1684047,49.0956928 C89.1684047,43.4789127 93.7199556,38.9273618 99.3367356,38.9273618 C104.950606,38.9273618 109.505067,43.4789127 109.505067,49.0956928\" id=\"Fill-1\" fill=\"#000000\"></path>\n                    <path d=\"M145.154147,4.30140149 C143.676944,6.66565887 123.888411,37.8859459 121.98559,40.8776551 C121.545493,41.5689328 121.113814,42.2456892 120.69089,42.9109638 C120.413094,43.349302 120.140685,43.7791977 119.868613,44.2033524 C117.800797,36.1869631 111.13402,30.0235491 102.857034,28.7254195 C103.230796,28.1327511 114.844033,9.709712 117.774869,5.02746253 C118.110582,4.49017736 118.406225,4.09236345 119.150383,4.09538548 C127.687992,4.12444522 136.222572,4.1214059 144.760182,4.13018617 C144.838301,4.13018617 144.916758,4.194012 145.154147,4.30140149\" id=\"Fill-4\" fill=\"#3467FE\"></path>\n                    <path d=\"M150.091852,94.8054169 C145.817155,99.8908835 141.004037,103.484041 134.887465,104.927383 C126.483198,106.908348 118.47559,106.010734 111.299014,100.803019 C106.083176,97.0214227 102.903501,91.723541 100.592572,85.8333286 C100.525901,85.6621133 100.44475,85.4527375 100.352152,85.2089161 C100.334642,85.1596115 100.314439,85.1099692 100.296929,85.0606646 C99.6975623,83.4805531 98.6607924,80.6256136 97.6472564,77.5379968 C96.8216117,75.0170453 96.0138134,72.3421014 95.4750568,70.0764532 C96.8044389,70.3435761 98.1829825,70.4830474 99.5904844,70.4830474 C105.811104,70.4830474 111.400368,67.7615004 115.231938,63.4426192 L115.275375,63.3960162 C116.682877,66.8959681 118.151326,72.391406 119.541318,76.6636842 C119.547042,76.6755038 119.550073,76.6869857 119.552766,76.6988053 C119.935284,77.8662439 120.308709,78.9408143 120.676411,79.8586905 C122.220286,83.7274139 123.862147,87.5120493 126.964038,90.3818478 C127.17247,90.5706236 127.386625,90.7593995 127.606842,90.9424344 C131.643813,94.2968364 136.474441,95.1741883 141.51653,95.3396627 C144.256444,95.42679 146.972788,95.0522776 150.091852,94.8054169\" id=\"Fill-6\" fill=\"#0219FA\"></path>\n                    <path d=\"M81.8694301,60.6832495 C76.9054607,67.6426291 71.5246283,74.2707221 65.1939005,80.1406723 C59.8565054,85.089707 54.1716122,89.5163155 47.3135763,92.1882201 C44.698586,93.2077449 41.9876297,93.7683315 39.1699323,93.74503 C31.2087921,93.7625906 25.4861859,88.7581727 23.7948266,80.3959757 C22.2916955,72.9634745 23.0503322,65.6441038 25.129933,58.4817649 C28.9817066,45.2140969 35.746807,33.4856783 44.7187894,23.0587664 C48.7789945,18.3417335 53.4415969,14.2869359 59.5322412,12.3468332 C63.8385907,10.9760975 68.1712047,10.5840246 72.3788944,12.7534274 C75.6225463,14.4264071 77.8816205,17.121951 79.6857819,20.2065284 C82.2546411,24.5922748 83.8446468,29.355573 85.22016,34.1945165 C88.9705799,30.64526 94.0271482,28.4697785 99.5904844,28.4697785 C100.702343,28.4697785 101.794336,28.5569058 102.857034,28.7254195 C102.927072,28.6143153 103.390403,27.879474 104.116041,26.7279074 C103.163788,24.5243966 102.352959,22.5208058 101.441114,20.5665196 C98.5910907,14.4875314 94.7019409,9.23321333 89.0921369,5.43709604 C82.437145,0.932140558 75.0491072,-0.511201252 67.1199557,0.153735581 C57.0068192,1.00204504 47.5741998,3.95019057 38.9584703,9.28859659 C25.2659691,17.7754059 14.5157529,29.140794 6.9687819,43.4131278 C2.13512426,52.5479889 -0.645196963,62.2809215 0.128255604,72.7486955 C1.12731253,86.2574833 7.90992248,95.9178099 19.9834598,101.825245 C29.3726419,106.420367 39.369609,106.835742 49.4945307,105.589618 C57.9102469,104.552871 65.8454594,101.77898 73.1611017,97.5327048 C82.0374548,92.3830746 89.7292167,85.6705559 96.8940072,78.3484835 C97.1401516,78.0958818 97.3024521,77.7183301 97.6472564,77.5379968 C96.8216117,75.0170453 96.0138134,72.3421014 95.4750568,70.0764532 C89.7581749,68.9350177 84.8814167,65.4610689 81.8694301,60.6832495\" id=\"Fill-7\" fill=\"#0219FA\"></path>\n                </g>\n            </g>\n        </g>\n    </g>\n</svg>\n";

function alphawallet(options) {
  var preferred = options.preferred,
      label = options.label,
      iconSrc = options.iconSrc,
      svg = options.svg,
      rpcUrl = options.rpcUrl;
  return {
    name: label || 'AlphaWallet',
    svg: svg || alphawalletIcon,
    iconSrc: iconSrc,
    wallet: function () {
      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(helpers) {
        var getProviderName, getAddress, getNetwork, getBalance, alphawalletProvider, isAlphaWallet, createProvider, provider, warned;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                getProviderName = helpers.getProviderName, getAddress = helpers.getAddress, getNetwork = helpers.getNetwork, getBalance = helpers.getBalance;
                alphawalletProvider = window.ethereum || window.web3 && window.web3.currentProvider;
                isAlphaWallet = getProviderName(alphawalletProvider) === 'AlphaWallet';

                if (!(isAlphaWallet && rpcUrl)) {
                  _context2.next = 7;
                  break;
                }

                _context2.next = 6;
                return new Promise(function (resolve) {
                  resolve(require('./providerEngine-14128c32.js'));
                });

              case 6:
                createProvider = _context2.sent["default"];

              case 7:
                provider = createProvider ? createProvider({
                  rpcUrl: rpcUrl
                }) : null;
                warned = false;
                return _context2.abrupt("return", {
                  provider: alphawalletProvider,
                  "interface": isAlphaWallet ? {
                    address: {
                      get: function get() {
                        return getAddress(alphawalletProvider);
                      }
                    },
                    network: {
                      get: function get() {
                        return getNetwork(alphawalletProvider);
                      }
                    },
                    balance: {
                      get: function () {
                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                          var address;
                          return regeneratorRuntime.wrap(function _callee$(_context) {
                            while (1) {
                              switch (_context.prev = _context.next) {
                                case 0:
                                  if (provider) {
                                    _context.next = 3;
                                    break;
                                  }

                                  if (!warned) {
                                    console.warn('The AlphaWallet provider does not allow rpc calls preventing Onboard.js from getting the balance. You can pass in a "rpcUrl" to the AlphaWallet initialization object to get the balance.');
                                    warned = true;
                                  }

                                  return _context.abrupt("return", null);

                                case 3:
                                  _context.next = 5;
                                  return getAddress(alphawalletProvider);

                                case 5:
                                  address = _context.sent;
                                  return _context.abrupt("return", getBalance(provider, address));

                                case 7:
                                case "end":
                                  return _context.stop();
                              }
                            }
                          }, _callee);
                        }));

                        function get() {
                          return _get.apply(this, arguments);
                        }

                        return get;
                      }()
                    },
                    name: getProviderName(alphawalletProvider)
                  } : null
                });

              case 10:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function wallet(_x) {
        return _wallet.apply(this, arguments);
      }

      return wallet;
    }(),
    type: 'injected',
    link: "https://aw.app/openurl?url=".concat(window.location.href),
    installMessage: content.mobileWalletInstallMessage,
    mobile: true,
    preferred: preferred
  };
}

exports["default"] = alphawallet;